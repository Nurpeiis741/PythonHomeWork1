
#HomeWork seminar 1

# Задача 2: Найдите сумму цифр трехзначного числа.
# *Пример:*
# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0) |


# a = int(input())
# a1 = a%10
# a2 = (a%100)//10
# a3 = a//100
# print(a1+a2+a3)

# Задача 4: Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали S журавликов. Сколько журавликов сделал каждый ребенок, 
если известно, что Петя и Сережа сделали одинаковое количество журавликов, а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# *Пример:*
# 6 -> 1  4  1
# 24 -> 4  16  4
#     60 -> 10  40  10

# a = int(input())
# a1 = a/2
# a2 = a1/2
# print(a1, a2, a2)

# Задача 6: Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером. 
Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех. 
Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать программу, которая проверяет счастливость билета.
# *Пример:*
# 385916 -> yes
# 123456 -> no

# a = input("Введите число: ")
# sum1 = sum(map(int, a[0:3:1]))
# sum2 = sum(map(int, a[len(a)-1:-4:-1]))
# if sum1==sum2:
#     print("yes")
# else:
#     print("no")

# Задача 8: Требуется определить, можно ли от шоколадки размером n × m долек отломить k долек, если разрешается сделать один разлом по прямой между дольками 
(то есть разломить шоколадку на два прямоугольника).
# *Пример:*
# 3 2 4 -> yes
# 3 2 1 -> no

# n = int(input("n: "))
# m = int(input("m: "))
# k = int(input("k: "))
# s = n*m
# if s==k :
#     print("Невозможно разломать")

# elif k<s and k%2==0 :
#     print("Возможна")
# else:
#     print("Невозможно разломать")




#HomeWork Seminar2

 #Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
 #  Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. 
 # Выведите минимальное количество монет, которые нужно перевернуть

# import random

# n = int(input("Количество монеток: "))
# coin= list()
# min1 = 0
# min2 = 0
# for i in range(int(n)):
#     coin.append(random.randint(1, 2))
# print(coin)
# for i in range(int(n)):
#     if(coin[i] < 2):
#         min1+=1
#     if(coin[i]==2):
#         min2+=1
# if(min1<min2):
#     print(f"Из {n} монеток минимальное число монеток, которые нужно перевернуть (лежат вверх гербом)  {min1} чтобы все монетки были повернуты вверх одной и той же стороной.")
# else:
#     print(f"Из {n} монеток минимальное число монеток, которые нужно перевернуть (лежат вверх решкой)  {min2} чтобы все монетки были повернуты вверх одной и той же стороной.")

#Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. 
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
# from math import sqrt

# def calculate(b, c):
#     D = b*b + 4*c  # считаем дискриминант
#     if D > 0:  # если дискриминанат > 0 - два корня
#         sq = sqrt(D)/2
#         p = b/2
#         x1 = p-sq
#         x2 = p+sq
#         return [x1, x2]

# def main():
#     b = int(input('Сумма: '))
#     c = -int(input('Пройзведение: '))
#     print(calculate(b, c))

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# n = int(input("Введите число :"))
# temp = 2
# result = 0
# stepen = 0
# while(result<=n):
    
#     result=temp**stepen
#     stepen+=1
#     if(result<=n):
#         print(result)

HomeWork Seminar 3

# Задача 16: Требуется вычислить, сколько раз встречается некоторое
# число X в массиве A[1..N]. Пользователь в первой строке вводит
# натуральное число N – количество элементов в массиве. В последующих
# строках записаны N целых чисел Ai
# . Последняя строка содержит число X

# import random

# list1 = input("Введите количество целых чисел: ")
# num = int(input("Какое число искать :"))

# array = [random.randint(1, 10) for _ in range(int(list1))]
# counter = 0
# print(array)

# for i in array:
#     if i == num:
#         counter +=1
# print(counter)

# Задача 18: Требуется найти в массиве A[1..N] самый близкий по
# величине элемент к заданному числу X. Пользователь в первой строке
# вводит натуральное число N – количество элементов в массиве. В
# последующих строках записаны N целых чисел Ai
# . Последняя строка
# содержит число X



# import random

# list1 = input("Введите количество целых чисел: ")
# num = int(input("Какое число искать :"))

# array = [random.randint(1, 10) for _ in range(int(list1))]
# print(array)

# for i in array:
#     if(array[i] == num+1 or array[i] == num-1 ):
#         print(array[i])
#         break
#     elif(array[i] == num+2 or array[i] == num-2 ):
#         print(array[i])
#         break




# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.
# А русские буквы оцениваются так:
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы


dictionary1 = {}
dictionary2 = {}
dictionary1 = {'A' : '1','E' : '1', 'I' : '1','O' : '1','U' : '1', 'L' : '1', 'N' : '1','S' : '1', 'T' : '1', 'R' : '1',
'D' : '2', 'G' : '2',
'B' : '3','C' : '3', 'M' : '3', 'P' : '3',
'F' : '4', 'H' : '4', 'V' : '4', 'W' : '4', 'Y' : '4',
'K' : '5',
'J' : '8', 'X' : '8',
'Q' : '10', 'Z' : '10'}
dictionary2 ={'A' : '1','В' : '1','Е' : '1','И' : '1','Н' : '1','О' : '1','Р' : '1','С' : '1','Т' : '1',
'Д' : '2','К' : '2','Л' : '2','М' : '2','П' : '2','У' : '2',
'Б' : '3','Г' : '3','Ё' : '3','Ь' : '3','Я' : '3',
'Й' : '4','Ы' : '4',
'Ж' : '5','З' : '5','Х' : '5','У' : '5','Ч' : '5',
'Ш' : '8','Э' : '8','Ю' : '8',
'Ф' : '10','Щ' : '10','Ъ' : '10'}
a = str(input("Вводим слово заглавнымы буквами :"))
a2 = list(a)
sum=0

# print(a2)

for i in a2:
    if i in dictionary1:
        sum=sum+int(dictionary1[i])
    
    if i in dictionary2:
        sum=sum+int(dictionary2[i])
    
print(sum)       

HomeWork seminar 4

# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# import random
# list1 = input("Введите количество 1 набор чисел: ")
# list2 = input("Введите количество 2 набор чисел: ")


# array = [random.randint(1, 10) for _ in range(int(list1))]
# print(array)
# array1 = [random.randint(1, 10) for _ in range(int(list2))]
# print(array1)


# result = set(array).intersection(array1)
# print(result)


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности.
#  Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей.
#  Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.


import random
n =int(input()) 
array = []
result = 0
maxsum =0

for i in range(int(n)):
     array.append(random.randint(1, 10))
print(array)

for i in range(int(n)):
    if array[i] == array[0]:
         result = array[i] + array[i+1] + array[-1]
         print(result)

    elif array[i] == array[-1]:
         result = array[i-1]+array[i]+array[0]
         print(result)
         
    else  :
        result = array[i-1]+array[i]+array[i+1]
        print(result)
    if result > maxsum:
        maxsum = result
        num = i + 1
    
    
print(f"больше всего {maxsum} {num}")     


HomeWork seminar 5

# Задача 26:  Напишите программу, которая на вход принимает два числа A и B, и возводит число А в целую степень B с помощью рекурсии.

# *Пример:*

# A = 3; B = 5 -> 243 (3⁵)
#     A = 2; B = 3 -> 8 

# def power(base, exp):
#     if (exp == 1):
#         return (base)
#     if (exp != 1):
#         return (base * power(base, exp - 1))
    

# base = int(input("Введите число: "))
# exp = int(input("Введите его степень: "))
# print("Результат возведения в степень равен:", power(base, exp))


# Задача 28: Напишите рекурсивную функцию sum(a, b), возвращающую сумму двух целых неотрицательных чисел. Из всех арифметических операций допускаются только +1 и -1. Также нельзя использовать циклы.

# *Пример:*

# 2 2  4

# def power(a, b):
    
#     if (b == 0):
#         return (a)
#     if (b != 0):
#         a+=1
#         return (power(a, b - 1))
    

# a = int(input("Введите число a : "))
# b = int(input("Введите число b : "))
# print("sum a и b: ", power(a, b))

Homew Work seminar 7

# Задача 34: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
# разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
# стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
# гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
# слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
# от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
# напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не
# в порядке
# Ввод: Вывод:
# пара-ра-рам рам-пам-папам па-ра-па-дам Парам пам-пам

def rhythm(str):
    str = str.split()
    list = []
    for word in str:
        result = 0
        for i in word:
            if i in 'аеёиоуыэюя':
                result += 1
        list.append(result)
    return len(list) == list.count(list[0])

print('Введите: пара-ра-рам рам-пам-папам па-ра-па-дам')
str = input()
if rhythm(str):
    print('Парам пам-пам')
else:
    print('Пам парам')



# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.
# Ввод: Вывод:
# print_operation_table(lambda x, y: x * y) 
#  1 2 3 4 5 6
#  2 4 6 8 10 12
#  3 6 9 12 15 18
#  4 8 12 16 20 24
#  5 10 15 20 25 30
#  6 12 18 24 30 36 

# def print_operation_table(operation, num_rows=6, num_columns=6):
#     a = [[operation(i, j) for j in range(1, num_columns + 1)] for i in range(1, num_rows + 1)]
#     for i in a:
#         print(*[f"{x:>3}" for x in i])

# print_operation_table(lambda x, y: x * y)


